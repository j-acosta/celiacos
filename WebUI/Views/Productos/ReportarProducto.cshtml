@model WebUI.Models.ReporteViewModel

@{
    ViewBag.Title = "ReportarProducto";
}
@section Styles {
    <link rel="stylesheet" href=@Url.Content("~/Content/vistaReporte.css") type="text/css">
}

<div class="container">
    <section class="col-md-8">
        <div class="row">
            <h2 class="col-md-offset-3">Reportar Producto</h2>
            <hr />
            <p>
                <b>Nombre :</b> @Model.ProductoNombre
                <br /><br />
                <b>Descripcion:</b> @Model.ProductoDescripcion
                <br /><br />
                <b>Categoria:</b> @Model.ProductoCategoria
            </p>
            <hr />
            <br />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                //IMPORTANTE: se incrustan como input hidden (campo oculto) el Id del producto, para que luego vaya junto con el resto de la información al server, y se bindee el viewModel completo.
                @Html.EditorFor(model => model.ProductoId)

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Asunto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Asunto, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Asunto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Mensaje, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Mensaje, new { htmlAttributes = new { @class = "form-control", @style = "resize: none; height: 10em;" } })
                            @Html.ValidationMessageFor(model => model.Mensaje, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Enviar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </section>
    <aside class="col-md-offset-1 col-md-3">
        <h3>¿Que acción produce un reporte?</h3>
        <p>
            Cuando reportamos un producto, le llegue un mensaje al administrador indicándole la irregularidad que descubrimos.
            No siempre es malo realizar un reporte, entre todos nos podemos ayudar.
        </p>
        <img src="@Url.Content("~/Img/label.png")" style="width: 10em; margin-top: 2em; margin-left: 3em;" />
    </aside>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}