@model WebUI.Areas.Empresa.Models.ModificacionPerfilViewModel

@{
    ViewBag.Title = "Perfil";
}

@section Styles {
    <link rel="stylesheet" href="@Url.Content("~/Areas/Empresa/Content/perfil.css")">
}
<div class="container">
    <section class="caja col-md-offset-3 col-md-6">
        <p>@Html.ActionLink("Inicio", "Index", "VisionGeneral", null, new { @style = "color:black;" })/@Html.ActionLink("Perfil", "MostrarPerfil", "VisionGeneral", null, new { @style = "color:black;" })/@Html.ActionLink("EditarPerfil", "Perfil", "VisionGeneral", null, new { @style = "color:black;" })</p>
        <hr style="margin-top: 1em;" />
        <img src="@Url.Content(Model.Foto)" alt="fotoPerfil" class="img-thumbnail" id="fotoPerfil">
        <h2 class="perfil">PERFIL</h2>
        <hr />
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            //IMPORTANTE: se incrustan como input hidden (campo oculto) el Id del plato, y la ImagenUri, para que luego vaya junto con el resto de la información al server, y se bindee el viewModel completo.
            @Html.EditorFor(model => model.Foto)
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", @style = "resize: none;height: 8em;" } })
                        @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Ubicacion, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Ubicacion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ubicacion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <hr class="col-md-offset-1 col-md-9" />
                <h4 class="col-md-offset-1 col-md-10" style="text-align:center;">UBICACION EN EL MAPA</h4>
                <hr class="col-md-offset-1 col-md-9" />
                <div class="form-group">
                    @Html.LabelFor(model => model.Latitud, htmlAttributes: new { @class = "control-label col-xs-4 col-sm-4 col-md-4" })
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.TextBoxFor(model => model.Latitud, new { type = "text", name = "geoposition1a", id = "geoposition1a", size = "10", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Latitud, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Longitud, htmlAttributes: new { @class = "control-label col-xs-4 col-sm-4 col-md-4" })
                    <div class="col-xs-6 col-sm-6 col-md-6">
                        @Html.TextBoxFor(model => model.Longitud, new { type = "text", name = "geoposition1b", id = "geoposition1b", size = "10", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Longitud, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-offset-4 col-xs-8 col-sm-offset-4 col-sm-8 col-md-offset-4 col-md-8">
                        <button type="button" onclick="lookupGeoData();" class="btn btn-info"><span class="glyphicon glyphicon-globe" aria-hidden="true"></span> Mapa</button>
                    </div>
                </div>
                <hr class="col-md-offset-1 col-md-9" />


                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group formContenedorImagen">
                    @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9 contenedorImagen">
                        @Html.TextBoxFor(model => Model.Imagen, new { type = "file", htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.HoraAtencion, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.HoraAtencion, new { htmlAttributes = new { @class = "form-control", @style = "resize: none;height: 8em;" } })
                        @Html.ValidationMessageFor(model => model.HoraAtencion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-3 col-md-9">
                        <input type="submit" value="Guardar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </section>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="http://api.mygeoposition.com/api/geopicker/api.js" type="text/javascript"></script>

    <script type="text/javascript">
        function lookupGeoData() {
            myGeoPositionGeoPicker({
                startAddress: 'La Plata, Buenos Aires',
                returnFieldMap: {
                    'geoposition1a': '<LAT>',
                    'geoposition1b': '<LNG>',
                }
            });
        }
    </script>
}